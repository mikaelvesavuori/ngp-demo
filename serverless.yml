service: next-generation-pipeline

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'shared'}
  region: ${opt:region, 'eu-north-1'}
  memorySize: ${opt:memory, 1024}
  timeout: 10
  logRetentionInDays: 7
  versionFunctions: false
  deploymentBucket:
    blockPublicAccess: true
    maxPreviousDeploymentArtifacts: 5
    serverSideEncryption: AES256
  stackTags:
    Usage: ${self:service}
  tags:
    Usage: ${self:service}
  apiGateway:
    minimumCompressionSize: 1024
  tracing:
    apiGateway: true
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - xray:PutTelemetryRecords
            - xray:PutTraceSegments
          Resource:
            - "*"
  environment:
    REGION: ${self:provider.region}
    EVENT_BUS_NAME: ${self:custom.config.eventBusName}
    GREETING_PHRASES_SERVICE_URL: https://www.mockachino.com/0bac00ff-4afa-40/greetingPhrases
    GET_USER_NAME_SERVICE_URL: https://vqs31gyh16.execute-api.${self:provider.region}.amazonaws.com/shared/getUserName

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function

package:
  individually: true
  patterns:
    - node_modules/aws-sdk/**
    - node_modules/aws-lambda/**

custom:
  config:
    awsAccountNumber: 123412341234
    eventBusName: ngpdemo
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    excludeFiles: ./**/*.test.ts

functions:
  Greet:
    handler: src/infrastructure/adapters/web/Greet.handler
    description: Greet a user
    events:
      - http:
          method: POST
          path: /greet
    iamRoleStatements:
      - Effect: Allow
        Action:
          - events:PutEvents
        Resource: arn:aws:events:${self:provider.region}:${self:custom.config.awsAccountNumber}:event-bus/${self:custom.config.eventBusName}