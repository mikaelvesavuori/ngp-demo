{
  "asyncapi": "2.4.0",
  "info": {
    "title": "Demo Service",
    "x-domain": "SomeDomain",
    "x-system": "SomeSystem",
    "x-service": "Demo Service",
    "version": "1.0.0",
    "contact": {
      "name": "My Name",
      "url": "https://mydomain.com/docs#owner",
      "email": "myname@myplace.xyz"
    },
    "description": "Demo service that does something rad."
  },
  "externalDocs": {
    "description": "Confluence documentation",
    "url": "https://mydomain.com/docs"
  },
  "servers": {
    "dev": {
      "url": "https://api-dev.whateversomethinghere.com/",
      "protocol": "http",
      "description": "Something"
    },
    "production": {
      "url": "https://api.whateversomethinghere.com/",
      "protocol": "http",
      "description": "Something"
    },
    "eventbridge": {
      "url": "https://aws.123412341234.com/myEventBridge",
      "protocol": "eventbridge",
      "description": "Something"
    }
  },
  "channels": {
    "/employees": {
      "subscribe": {
        "bindings": {
          "http": {
            "type": "request",
            "method": "GET",
            "query": {
              "type": "object",
              "required": ["companyId"],
              "properties": {
                "companyId": {
                  "type": "number",
                  "minimum": 1,
                  "description": "The Id of the company."
                }
              },
              "additionalProperties": false
            },
            "bindingVersion": "0.1.0"
          }
        }
      }
    },
    "/updateEmployee": {
      "publish": {
        "bindings": {
          "http": {
            "type": "request",
            "method": "POST"
          }
        },
        "message": {
          "$ref": "#/components/messages/HelloWorld"
        }
      }
    },
    "demo/signedup": {
      "subscribe": {
        "bindings": {
          "eventbridge": {
            "operationId": "emitUserSignUpEvent",
            "message": {
              "$ref": "#/components/messages/UserSignedUp"
            }
          }
        }
      }
    },
    "demo/signup": {
      "publish": {
        "operationId": "signUpUserEvent",
        "message": {
          "$ref": "#/components/messages/SignUpUser"
        }
      }
    }
  },
  "components": {
    "messages": {
      "UserSignedUp": {
        "name": "userSignedUp",
        "title": "User signed up event",
        "summary": "Inform about a new user registration in the system",
        "contentType": "application/json",
        "payload": {
          "$ref": "#/components/schemas/UserSignedUp"
        }
      },
      "SignUpUser": {
        "name": "signUpUser",
        "title": "SignUpUser",
        "summary": "Sign up user",
        "contentType": "application/json",
        "payload": {
          "$ref": "#/components/schemas/SignUpUser"
        }
      },
      "HelloWorld": {
        "name": "helloWorld",
        "title": "HelloWorld",
        "summary": "Demo thingy",
        "contentType": "application/json",
        "payload": {
          "$ref": "#/components/schemas/HelloWorld"
        }
      }
    },
    "schemas": {
      "HelloWorld": {
        "type": "object",
        "description": "Inform about a new user registration in the system\n",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer's first name"
          }
        }
      },
      "UserSignedUp": {
        "type": "object",
        "description": "Inform about a new user registration in the system\n",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address to customer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
          }
        },
        "required": ["firstName", "lastName", "email"]
      },
      "SignUpUser": {
        "type": "object",
        "description": "Sign up a new user\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "First name and last name in a string"
          },
          "emailAddress": {
            "type": "string",
            "format": "email",
            "description": "Email address to customer"
          }
        }
      },
      "SingleFakeUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The fake user's name.",
            "minLength": 4,
            "maxLength": 30,
            "pattern": "^[\\w\\-\\s]{4,30}$"
          },
          "image": {
            "type": "string",
            "description": "The fake user's image URL (cat photo).",
            "minLength": 10,
            "maxLength": 100,
            "pattern": "/[\\w\\-\\.\\/:]*$/"
          },
          "id": {
            "type": "string",
            "description": "The fake user' ID.",
            "minLength": 8,
            "maxLength": 40,
            "pattern": "/[\\w\\-]*$/"
          },
          "email": {
            "type": "string",
            "description": "The fake user's fake email address.",
            "minLength": 4,
            "maxLength": 30,
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          }
        }
      }
    }
  }
}
